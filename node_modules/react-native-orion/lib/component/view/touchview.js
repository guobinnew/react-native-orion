/*
 *  Copyright (c) 2016-present, Unique, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

import React from 'react';
import {
    View,
    TouchableHighlight,
    TouchableOpacity,
    ColorPropType,
} from 'react-native';

import OrionComponent from '../component';

const OrionTouchView = React.createClass({
    propTypes: {
        ...OrionComponent.propTypes,
        ...View.propTypes,

        l_touch: React.PropTypes.shape({
            disabled: React.PropTypes.bool,
            onPress: React.PropTypes.func,
            onPressIn: React.PropTypes.func,
            onPressOut: React.PropTypes.func,
            onLayout: React.PropTypes.func,
            onLongPress: React.PropTypes.func,
            delayPressIn: React.PropTypes.number,
            delayPressOut: React.PropTypes.number,
            delayLongPress: React.PropTypes.number,
            activeOpacity: React.PropTypes.number,
        }),
        underlayColor: ColorPropType,
        l_type: React.PropTypes.oneOf(['highlight','opacity']),
    },
    getDefaultProps: function() {
        return {
            ...OrionComponent.defaultProps,
            ...View.defaultProps,
            disabled: false,
            delayPressIn: 0,
            delayPressOut: 0,
            delayLongPress: 500,
            activeOpacity: 0.2,
            l_type: 'opacity',
        };
    },
    render: function () {
        let{ l_type, l_touch, underlayColor, children, ...props } = this.props;

        var view = <View {...props}>{children}</View>;
        if( this.props.l_type === 'highlight') {
            return (<TouchableHighlight {...l_touch} underlayColor={underlayColor}>
                {view}
            </TouchableHighlight>);
        }

        return (<TouchableOpacity {...l_touch} >
                <View {...props}>{children}</View>
            </TouchableOpacity>);
    },
});

module.exports = OrionTouchView;
