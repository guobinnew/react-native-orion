/*
 *  Copyright (c) 2016-present, Unique, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

import React from 'react';
import {
  StyleSheet,
  Text,
  View,
  Platform,
} from 'react-native';

import Aspect from '../../aspect';
import Layout from './layout';

const OrionBadge = React.createClass({

  propTypes: {
      ...Text.propTypes,
  },
  getDefaultProps: function() {
    return {
      ...Text.defaultProps,
    };
  },

  getInitialState() {
    return {
      computedSize: null,
    }
  },

  componentDidMount:function(){
    this._handleLayout = this._handleLayout.bind(this);
  },

  render: function() {
    let { computedSize } = this.state;
    let containerStyle = {};
    if (!computedSize) {
      containerStyle.opacity = 0;
    } else {
      containerStyle.width = Math.max(computedSize.height, computedSize.width);
    }

    let textStyle;
    if( Platform.OS === 'android'){
      textStyle = [styles.text, {textAlignVertical:'center'}];
    }

    let {style, ...props} = this.props;
    return (
        <View
            style={[style, styles.container, containerStyle]}
            onLayout={this._handleLayout}
            {...props} >
          <Text
            numberOfLines={1}
            style={[styles.text, Platform.OS === 'android'? styles.text_and : null]}>
            {this.props.children}
        </Text>
        </View>
    );
  },

  _handleLayout: function(event) {
    let { width, height } = event.nativeEvent.layout;
    let { computedSize } = this.state;
    if (computedSize && computedSize.height === height &&
      computedSize.width === width) {
      return;
    }
    
    this.setState({
      computedSize: { width, height },
    });

    if (this.props.onLayout) {
      this.props.onLayout(event);
    }
  }
});

let styles = StyleSheet.create({
  container: {
    padding: 1,
    backgroundColor: '#FF0000',
    borderWidth: Aspect.onePixel,
    borderColor: '#FF0000',
    borderRadius: 18 / 2,
  },
  text:{
    fontSize: 13,
    color: '#FFFFFF',
    lineHeight: 15,
    textAlign: 'center',
    backgroundColor: 'transparent',
    textAlignVertical:'center',
  },
  text_and:{
    top:-2,
  }
});

module.exports = OrionBadge;