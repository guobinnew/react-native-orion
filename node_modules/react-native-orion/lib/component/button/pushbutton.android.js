/**
 *  Copyright (c) 2016-present, Unique, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 *
 */


import React, { Component } from 'react';
import {
    StyleSheet,
    Text,
    View,
    ColorPropType,
    TouchableOpacity,
} from 'react-native';

import {
    Aspect,
    OrionView,
    OrionText,
    OrionComponent,
} from 'react-native-lark';

const styles = StyleSheet.create({
    container:{
        width: Aspect.ratio(40),
        height: Aspect.ratio(20),
        borderWidth: 1,
        borderColor: "#000000",
        justifyContent:'center',
        alignItems: 'center',
    },
    title:{
        textAlign: 'center',
        color: '#000000',
        fontSize: Aspect.ratio(14),
    },
});

const OrionPushButton = React.createClass({
    propTypes: {
        ...OrionText.propTypes,
        l_height: React.PropTypes.number,
    },
    getDefaultProps: function() {
        return {
            ...OrionText.defaultProps,
            l_height: Aspect.ratio(20),
        };
    },

    render:function (){
        let { l_height, l_text, style, ...props } = this.props;

        let {
            color,
            fontFamily,
            fontSize,
            fontStyle,
            fontWeight,
            lineHeight,
            textAlign,
            textDecorationLine,
            textShadowColor,
            textShadowOffset,
            textShadowRadius,
            textAlignVertical,
            letterSpacing,
            textDecorationColor,
            textDecorationStyle,
            writingDirection,
            ...viewStyle
        } = style;

        var fs = fontSize ? fontSize : Aspect.ratio(14);
        var viewProp={...viewStyle};
        viewProp.height = l_height;
        
        var textProp ={
            color,
            fontFamily,
            fontStyle,
            fontWeight,
            textAlign,
            textDecorationLine,
            textShadowColor,
            textShadowOffset,
            textShadowRadius,
            textAlignVertical,
            letterSpacing,
            textDecorationColor,
            textDecorationStyle,
            writingDirection
        };
        textProp.fontSize = fs;

        return (
            <TouchableOpacity
                activeOpacity={1.0}
                onPress={this.props.onPress}>
                <OrionView style={[styles.container, viewProp]}>
                    <OrionText {...props} l_text={l_text} style={[styles.title, textProp]}/>
                </OrionView>
            </TouchableOpacity>
        );
    }
});


module.exports = OrionPushButton;
