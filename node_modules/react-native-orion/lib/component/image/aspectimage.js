/*
 *  Copyright (c) 2016-present, Unique, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

import React from 'react';
import {
    View,
    Image,
} from 'react-native';

import Aspect from '../../aspect';
import OrionImage from './image';
import DataWrapper from '../../datawrapper';

const OrionAspectImage = React.createClass({
    propTypes: {
        ...OrionImage.propTypes,
        l_width: React.PropTypes.number.isRequired,
    },

    getDefaultProps: function() {
        return {
            ...OrionImage.defaultProps,
            l_width: Aspect.deviceWidth(),
        };
    },

    getInitialState: function() {
        var {source} = this.props;
        var local = false;
        if( typeof source === 'number'){  // 本地资源
            local = true;
        }

        return {
            local: local,
            measured: false,
            srcWidth: 0,
            srcHeight: 1
        };
    },

    componentDidMount: function() {
        let {l_uri, l_width, ...props} = this.props;
        if( l_uri && l_uri != '' ){
            var source = {};
            source.uri = l_uri;
            var layoutWidth = this.state.layoutWidth;
            Image.getSize(source.uri, (w, h) => {
                this.setState({
                    measured: true,
                    srcWidth: w,
                    srcHeight: h
                });
            });
        }
        else{
            this.setState({
                measured: false,
                srcWidth: 0,
                srcHeight: 1
            });
        }
    },

    _onLayout: function (evt) {
        var self = this;
        if( this.state.local === true ){
            this.refs.image.measure(function(x, y, w, h, px, py) {
                self.setState({
                    measured: true,
                    srcWidth: w,
                    srcHeight: h
                });
            });
        }
    },

    render: function() {
        let {l_width, ...props} = this.props;

        var w = DataWrapper.toNumber(l_width);
        var h = this.state.srcHeight;
        if( this.state.measured === true ){
            var aspectRatio = this.state.srcWidth / this.state.srcHeight;
            h = w / aspectRatio;
        }

        var sizeStyle={
            width:w,
            height:h
        };
        // 本地图片
        if( this.state.local === true ){
            if( this.state.measured === true ) {
                return (<Image
                        style={[sizeStyle,{resizeMode:'cover'}]}
                        {...props}
                    />
                );
            }
            else{
                return (<Image
                        ref="image"
                        style={{resizeMode:'cover'}}
                        onLoadEnd={this._onLayout}
                        {...props}
                    />
                );
            }
        }


        // 网络图片
        return (
            <OrionImage
                {...props}
                style={sizeStyle}
                />
        );
    }
});

module.exports = OrionAspectImage;